{"ast":null,"code":"var _jsxFileName = \"/home/prince/Desktop/roxiler/src/Components/TransactionTable.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import TransactionStatistics from './TransactionStatistics';\n// import TransactionBarChart from './TransactionBarChart';\n\n// const TransactionTable = () => {\n//     const [transactions, setTransactions] = useState([]);\n//     const [selectedMonth, setSelectedMonth] = useState('March');\n//     const [searchTerm, setSearchTerm] = useState('');\n//     const [page, setPage] = useState(1);\n//     const transactionsPerPage = 3;\n\n//     useEffect(() => {\n//         fetchTransactions();\n//     }, [selectedMonth, searchTerm, page]);\n\n//     const fetchTransactions = async () => {\n//         const response = await fetch(`https://664c7d2a35bbda10988094cc.mockapi.io/task1/roxiler?month=${selectedMonth}&page=${page}&search=${searchTerm}`);\n//         const data = await response.json();\n//         setTransactions(data);\n//     };\n\n//     const handleSearch = (event) => {\n//         setSearchTerm(event.target.value);\n//         setPage(1); // Reset to first page on new search\n//     };\n\n//     const handleMonthChange = (event) => {\n//         setSelectedMonth(event.target.value);\n//         setPage(1); // Reset to first page on month change\n//     };\n\n//     const renderTransactions = () => {\n//         const startIndex = (page - 1) * transactionsPerPage;\n//         const endIndex = startIndex + transactionsPerPage;\n//         return transactions.slice(startIndex, endIndex).map(transaction => (\n//             <tr key={transaction.id}>\n//                 <td>{transaction.id}</td>\n//                 <td>{transaction.title}</td>\n//                 <td>{transaction.description}</td>\n//                 <td>{transaction.price}</td>\n//                 <td>{transaction.category}</td>\n//                 <td>{transaction.sold}</td>\n//                 <td><img src={transaction.image} alt={transaction.title} width=\"50\" /></td>\n//             </tr>\n//         ));\n//     };\n\n//     return (\n//         <div>\n//             <h2>Transaction Dashboard</h2>\n//             <div>\n//                 <input\n//                     type=\"text\"\n//                     placeholder=\"Search transaction\"\n//                     value={searchTerm}\n//                     onChange={handleSearch}\n//                 />\n//                 <select value={selectedMonth} onChange={handleMonthChange}>\n//                     {['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'].map(month => (\n//                         <option key={month} value={month}>{month}</option>\n//                     ))}\n//                 </select>\n//             </div>\n//             <TransactionStatistics selectedMonth={selectedMonth} />\n//             <TransactionBarChart selectedMonth={selectedMonth} />\n//             <table>\n//                 <thead>\n//                     <tr>\n//                         <th>ID</th>\n//                         <th>Title</th>\n//                         <th>Description</th>\n//                         <th>Price</th>\n//                         <th>Category</th>\n//                         <th>Sold</th>\n//                         <th>Image</th>\n//                     </tr>\n//                 </thead>\n//                 <tbody>\n//                     {renderTransactions()}\n//                 </tbody>\n//             </table>\n//             <div>\n//                 <button onClick={() => setPage(page > 1 ? page - 1 : 1)}>Previous</button>\n//                 <span>Page No: {page}</span>\n//                 <button onClick={() => setPage(page + 1)}>Next</button>\n//             </div>\n//         </div>\n//     );\n// };\n\n// export default TransactionTable;\n\nimport React, { useState, useEffect } from 'react';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TransactionDashboard = () => {\n  _s();\n  const [transactions, setTransactions] = useState([]);\n  const [selectedMonth, setSelectedMonth] = useState('March');\n  const [searchTerm, setSearchTerm] = useState('');\n  const [page, setPage] = useState(1);\n  const [stats, setStats] = useState({\n    totalSale: 0,\n    totalSoldItems: 0,\n    totalNotSoldItems: 0\n  });\n  const [chartData, setChartData] = useState([]);\n  const transactionsPerPage = 3;\n  useEffect(() => {\n    fetchTransactions();\n    fetchStatistics();\n    fetchChartData();\n  }, [selectedMonth, searchTerm, page]);\n  const fetchTransactions = async () => {\n    const response = await fetch(`https://664c7d2a35bbda10988094cc.mockapi.io/task1/roxiler?month=${selectedMonth}&page=${page}&search=${searchTerm}`);\n    const data = await response.json();\n    setTransactions(data);\n  };\n  const fetchStatistics = async () => {\n    const response = await fetch(`https://664c7d2a35bbda10988094cc.mockapi.io/task1/chart?month=${selectedMonth}`);\n    const data = await response.json();\n    setStats(data[0]);\n  };\n  const fetchChartData = async () => {\n    const response = await fetch(`https://6652d7f9813d78e6d6d65e3d.mockapi.io/v1/chartDatas?month=${selectedMonth}`);\n    const data = await response.json();\n    setChartData(data);\n  };\n  const handleSearch = event => {\n    setSearchTerm(event.target.value);\n    setPage(1); // Reset to first page on new search\n  };\n  const handleMonthChange = event => {\n    setSelectedMonth(event.target.value);\n    setPage(1); // Reset to first page on month change\n  };\n  const renderTransactions = () => {\n    const startIndex = (page - 1) * transactionsPerPage;\n    const endIndex = startIndex + transactionsPerPage;\n    return transactions.slice(startIndex, endIndex).map(transaction => /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: transaction.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: transaction.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: transaction.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: transaction.price\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: transaction.category\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: transaction.sold\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: transaction.image,\n          alt: transaction.title,\n          width: \"50\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this)]\n    }, transaction.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }, this));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Transaction Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search transaction\",\n        value: searchTerm,\n        onChange: handleSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedMonth,\n        onChange: handleMonthChange,\n        children: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'].map(month => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: month,\n          children: month\n        }, month, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Statistics - \", selectedMonth]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total sale: \", stats.totalSale]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total sold items: \", stats.totalSoldItems]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total not sold items: \", stats.totalNotSoldItems]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }, this), console.log(chartData[0])]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Bar Chart Stats - \", selectedMonth]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n        width: \"100%\",\n        height: 300,\n        children: /*#__PURE__*/_jsxDEV(BarChart, {\n          data: chartData,\n          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n            strokeDasharray: \"3 3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"priceRange\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Bar, {\n            dataKey: \"count\",\n            fill: \"#8884d8\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Sold\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: renderTransactions()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setPage(page > 1 ? page - 1 : 1),\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Page No: \", page]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setPage(page + 1),\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 9\n  }, this);\n};\n_s(TransactionDashboard, \"lgjx3VvN2SwuhDNxJSNDjNAjkKg=\");\n_c = TransactionDashboard;\nexport default TransactionDashboard;\nvar _c;\n$RefreshReg$(_c, \"TransactionDashboard\");","map":{"version":3,"names":["React","useState","useEffect","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","ResponsiveContainer","jsxDEV","_jsxDEV","TransactionDashboard","_s","transactions","setTransactions","selectedMonth","setSelectedMonth","searchTerm","setSearchTerm","page","setPage","stats","setStats","totalSale","totalSoldItems","totalNotSoldItems","chartData","setChartData","transactionsPerPage","fetchTransactions","fetchStatistics","fetchChartData","response","fetch","data","json","handleSearch","event","target","value","handleMonthChange","renderTransactions","startIndex","endIndex","slice","map","transaction","children","id","fileName","_jsxFileName","lineNumber","columnNumber","title","description","price","category","sold","src","image","alt","width","type","placeholder","onChange","month","console","log","height","strokeDasharray","dataKey","fill","onClick","_c","$RefreshReg$"],"sources":["/home/prince/Desktop/roxiler/src/Components/TransactionTable.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import TransactionStatistics from './TransactionStatistics';\n// import TransactionBarChart from './TransactionBarChart';\n\n// const TransactionTable = () => {\n//     const [transactions, setTransactions] = useState([]);\n//     const [selectedMonth, setSelectedMonth] = useState('March');\n//     const [searchTerm, setSearchTerm] = useState('');\n//     const [page, setPage] = useState(1);\n//     const transactionsPerPage = 3;\n\n//     useEffect(() => {\n//         fetchTransactions();\n//     }, [selectedMonth, searchTerm, page]);\n\n//     const fetchTransactions = async () => {\n//         const response = await fetch(`https://664c7d2a35bbda10988094cc.mockapi.io/task1/roxiler?month=${selectedMonth}&page=${page}&search=${searchTerm}`);\n//         const data = await response.json();\n//         setTransactions(data);\n//     };\n\n//     const handleSearch = (event) => {\n//         setSearchTerm(event.target.value);\n//         setPage(1); // Reset to first page on new search\n//     };\n\n//     const handleMonthChange = (event) => {\n//         setSelectedMonth(event.target.value);\n//         setPage(1); // Reset to first page on month change\n//     };\n\n//     const renderTransactions = () => {\n//         const startIndex = (page - 1) * transactionsPerPage;\n//         const endIndex = startIndex + transactionsPerPage;\n//         return transactions.slice(startIndex, endIndex).map(transaction => (\n//             <tr key={transaction.id}>\n//                 <td>{transaction.id}</td>\n//                 <td>{transaction.title}</td>\n//                 <td>{transaction.description}</td>\n//                 <td>{transaction.price}</td>\n//                 <td>{transaction.category}</td>\n//                 <td>{transaction.sold}</td>\n//                 <td><img src={transaction.image} alt={transaction.title} width=\"50\" /></td>\n//             </tr>\n//         ));\n//     };\n\n//     return (\n//         <div>\n//             <h2>Transaction Dashboard</h2>\n//             <div>\n//                 <input\n//                     type=\"text\"\n//                     placeholder=\"Search transaction\"\n//                     value={searchTerm}\n//                     onChange={handleSearch}\n//                 />\n//                 <select value={selectedMonth} onChange={handleMonthChange}>\n//                     {['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'].map(month => (\n//                         <option key={month} value={month}>{month}</option>\n//                     ))}\n//                 </select>\n//             </div>\n//             <TransactionStatistics selectedMonth={selectedMonth} />\n//             <TransactionBarChart selectedMonth={selectedMonth} />\n//             <table>\n//                 <thead>\n//                     <tr>\n//                         <th>ID</th>\n//                         <th>Title</th>\n//                         <th>Description</th>\n//                         <th>Price</th>\n//                         <th>Category</th>\n//                         <th>Sold</th>\n//                         <th>Image</th>\n//                     </tr>\n//                 </thead>\n//                 <tbody>\n//                     {renderTransactions()}\n//                 </tbody>\n//             </table>\n//             <div>\n//                 <button onClick={() => setPage(page > 1 ? page - 1 : 1)}>Previous</button>\n//                 <span>Page No: {page}</span>\n//                 <button onClick={() => setPage(page + 1)}>Next</button>\n//             </div>\n//         </div>\n//     );\n// };\n\n// export default TransactionTable;\n\nimport React, { useState, useEffect } from 'react';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\n\nconst TransactionDashboard = () => {\n    const [transactions, setTransactions] = useState([]);\n    const [selectedMonth, setSelectedMonth] = useState('March');\n    const [searchTerm, setSearchTerm] = useState('');\n    const [page, setPage] = useState(1);\n    const [stats, setStats] = useState({ totalSale: 0, totalSoldItems: 0, totalNotSoldItems: 0 });\n    const [chartData, setChartData] = useState([]);\n    const transactionsPerPage = 3;\n\n    useEffect(() => {\n        fetchTransactions();\n        fetchStatistics();\n        fetchChartData();\n    }, [selectedMonth, searchTerm, page]);\n\n    const fetchTransactions = async () => {\n        const response = await fetch(`https://664c7d2a35bbda10988094cc.mockapi.io/task1/roxiler?month=${selectedMonth}&page=${page}&search=${searchTerm}`);\n        const data = await response.json();\n        setTransactions(data);\n    };\n\n    const fetchStatistics = async () => {\n        const response = await fetch(`https://664c7d2a35bbda10988094cc.mockapi.io/task1/chart?month=${selectedMonth}`);\n        const data = await response.json();\n        setStats(data[0]);\n    };\n\n    const fetchChartData = async () => {\n        const response = await fetch(`https://6652d7f9813d78e6d6d65e3d.mockapi.io/v1/chartDatas?month=${selectedMonth}`);\n        const data = await response.json();\n        setChartData(data);\n    };\n\n    const handleSearch = (event) => {\n        setSearchTerm(event.target.value);\n        setPage(1); // Reset to first page on new search\n    };\n\n    const handleMonthChange = (event) => {\n        setSelectedMonth(event.target.value);\n        setPage(1); // Reset to first page on month change\n    };\n\n    const renderTransactions = () => {\n        const startIndex = (page - 1) * transactionsPerPage;\n        const endIndex = startIndex + transactionsPerPage;\n        return transactions.slice(startIndex, endIndex).map(transaction => (\n            <tr key={transaction.id}>\n                <td>{transaction.id}</td>\n                <td>{transaction.title}</td>\n                <td>{transaction.description}</td>\n                <td>{transaction.price}</td>\n                <td>{transaction.category}</td>\n                <td>{transaction.sold}</td>\n                <td><img src={transaction.image} alt={transaction.title} width=\"50\" /></td>\n            </tr>\n        ));\n    };\n\n    return (\n        <div>\n            <h2>Transaction Dashboard</h2>\n            <div>\n                <input\n                    type=\"text\"\n                    placeholder=\"Search transaction\"\n                    value={searchTerm}\n                    onChange={handleSearch}\n                />\n                <select value={selectedMonth} onChange={handleMonthChange}>\n                    {['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'].map(month => (\n                        <option key={month} value={month}>{month}</option>\n                    ))}\n                </select>\n            </div>\n            <div>\n                <h3>Statistics - {selectedMonth}</h3>\n                <p>Total sale: {stats.totalSale}</p>\n                <p>Total sold items: {stats.totalSoldItems}</p>\n                <p>Total not sold items: {stats.totalNotSoldItems}</p>\n                {console.log(chartData[0])}\n            </div>\n            <div>\n                <h3>Bar Chart Stats - {selectedMonth}</h3>\n                <ResponsiveContainer width=\"100%\" height={300}>\n                    <BarChart data={chartData}>\n                        <CartesianGrid strokeDasharray=\"3 3\" />\n                        <XAxis dataKey=\"priceRange\" />\n                        <YAxis />\n                        <Tooltip />\n                        <Bar dataKey=\"count\" fill=\"#8884d8\" />\n                    </BarChart>\n                </ResponsiveContainer>\n            </div>\n            <table>\n                <thead>\n                    <tr>\n                        <th>ID</th>\n                        <th>Title</th>\n                        <th>Description</th>\n                        <th>Price</th>\n                        <th>Category</th>\n                        <th>Sold</th>\n                        <th>Image</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {renderTransactions()}\n                </tbody>\n            </table>\n            <div>\n                <button onClick={() => setPage(page > 1 ? page - 1 : 1)}>Previous</button>\n                <span>Page No: {page}</span>\n                <button onClick={() => setPage(page + 1)}>Next</button>\n            </div>\n        </div>\n    );\n};\n\nexport default TransactionDashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
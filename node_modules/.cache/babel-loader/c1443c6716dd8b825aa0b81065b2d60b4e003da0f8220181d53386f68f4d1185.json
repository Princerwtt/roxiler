{"ast":null,"code":"var _jsxFileName = \"/home/prince/Desktop/roxiler/src/Components/TransactionBarChart.js\",\n  _s = $RefreshSig$();\n// src/components/TransactionBarChart.js\nimport React, { useEffect, useState } from 'react';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TransactionBarChart = ({\n  selectedMonth\n}) => {\n  _s();\n  const [chartData, setChartData] = useState([]);\n  useEffect(() => {\n    const fetchChartData = async () => {\n      const response = await fetch(`https://664c7d2a35bbda10988094cc.mockapi.io/task1/roxiler?month=${selectedMonth}`);\n      const data = await response.json();\n      setChartData(data);\n    };\n    fetchChartData();\n  }, [selectedMonth]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Bar Chart Stats - \", selectedMonth]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: 300,\n      children: /*#__PURE__*/_jsxDEV(BarChart, {\n        data: chartData,\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"3 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"priceRange\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Bar, {\n          dataKey: \"count\",\n          fill: \"#8884d8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n_s(TransactionBarChart, \"Leo9Xk/Ki5G6SkYc3yZESo07mWw=\");\n_c = TransactionBarChart;\nexport default TransactionBarChart;\nvar _c;\n$RefreshReg$(_c, \"TransactionBarChart\");","map":{"version":3,"names":["React","useEffect","useState","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","ResponsiveContainer","jsxDEV","_jsxDEV","TransactionBarChart","selectedMonth","_s","chartData","setChartData","fetchChartData","response","fetch","data","json","children","fileName","_jsxFileName","lineNumber","columnNumber","width","height","strokeDasharray","dataKey","fill","_c","$RefreshReg$"],"sources":["/home/prince/Desktop/roxiler/src/Components/TransactionBarChart.js"],"sourcesContent":["// src/components/TransactionBarChart.js\nimport React, { useEffect, useState } from 'react';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\n\nconst TransactionBarChart = ({ selectedMonth }) => {\n    const [chartData, setChartData] = useState([]);\n\n    useEffect(() => {\n        const fetchChartData = async () => {\n            const response = await fetch(`https://664c7d2a35bbda10988094cc.mockapi.io/task1/roxiler?month=${selectedMonth}`);\n            const data = await response.json();\n            setChartData(data);\n        };\n\n        fetchChartData();\n    }, [selectedMonth]);\n\n    return (\n        <div>\n            <h3>Bar Chart Stats - {selectedMonth}</h3>\n            <ResponsiveContainer width=\"100%\" height={300}>\n                <BarChart data={chartData}>\n                    <CartesianGrid strokeDasharray=\"3 3\" />\n                    <XAxis dataKey=\"priceRange\" />\n                    <YAxis />\n                    <Tooltip />\n                    <Bar dataKey=\"count\" fill=\"#8884d8\" />\n                </BarChart>\n            </ResponsiveContainer>\n        </div>\n    );\n};\n\nexport default TransactionBarChart;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,QAAQ,EAAEC,GAAG,EAAEC,KAAK,EAAEC,KAAK,EAAEC,aAAa,EAAEC,OAAO,EAAEC,mBAAmB,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpG,MAAMC,mBAAmB,GAAGA,CAAC;EAAEC;AAAc,CAAC,KAAK;EAAAC,EAAA;EAC/C,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAE9CD,SAAS,CAAC,MAAM;IACZ,MAAMgB,cAAc,GAAG,MAAAA,CAAA,KAAY;MAC/B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,mEAAmEN,aAAa,EAAE,CAAC;MAChH,MAAMO,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClCL,YAAY,CAACI,IAAI,CAAC;IACtB,CAAC;IAEDH,cAAc,CAAC,CAAC;EACpB,CAAC,EAAE,CAACJ,aAAa,CAAC,CAAC;EAEnB,oBACIF,OAAA;IAAAW,QAAA,gBACIX,OAAA;MAAAW,QAAA,GAAI,oBAAkB,EAACT,aAAa;IAAA;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC1Cf,OAAA,CAACF,mBAAmB;MAACkB,KAAK,EAAC,MAAM;MAACC,MAAM,EAAE,GAAI;MAAAN,QAAA,eAC1CX,OAAA,CAACR,QAAQ;QAACiB,IAAI,EAAEL,SAAU;QAAAO,QAAA,gBACtBX,OAAA,CAACJ,aAAa;UAACsB,eAAe,EAAC;QAAK;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACvCf,OAAA,CAACN,KAAK;UAACyB,OAAO,EAAC;QAAY;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC9Bf,OAAA,CAACL,KAAK;UAAAiB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACTf,OAAA,CAACH,OAAO;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACXf,OAAA,CAACP,GAAG;UAAC0B,OAAO,EAAC,OAAO;UAACC,IAAI,EAAC;QAAS;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrB,CAAC;AAEd,CAAC;AAACZ,EAAA,CA3BIF,mBAAmB;AAAAoB,EAAA,GAAnBpB,mBAAmB;AA6BzB,eAAeA,mBAAmB;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/home/prince/Desktop/roxiler/src/Components/TransactionStatistics.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TransactionStatistics = ({\n  selectedMonth\n}) => {\n  _s();\n  var _stats$, _stats$2, _stats$3;\n  const [stats, setStats] = useState([]);\n  const [chartData, setChartData] = useState({});\n  useEffect(() => {\n    const fetchStatistics = async () => {\n      try {\n        var _data$;\n        const response = await fetch(`https://664c7d2a35bbda10988094cc.mockapi.io/task1/chart?month=${selectedMonth}`);\n        const data = await response.json();\n        setStats(data);\n\n        // Process data for chart\n        const chartData = {\n          labels: ['Total Sale'],\n          datasets: [{\n            label: 'Total Sale',\n            data: [((_data$ = data[0]) === null || _data$ === void 0 ? void 0 : _data$.totalSale) || 0],\n            backgroundColor: 'rgba(75, 192, 192, 0.2)',\n            borderColor: 'rgba(75, 192, 192, 1)',\n            borderWidth: 1\n          }]\n        };\n        setChartData(chartData);\n      } catch (error) {\n        console.error('Error fetching statistics:', error);\n      }\n    };\n    fetchStatistics();\n  }, [selectedMonth]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Statistics - \", selectedMonth]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: '400px',\n        width: '600px'\n      },\n      children: /*#__PURE__*/_jsxDEV(Bar, {\n        data: chartData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Total sale: \", ((_stats$ = stats[0]) === null || _stats$ === void 0 ? void 0 : _stats$.totalSale) || 0]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Total sold items: \", ((_stats$2 = stats[0]) === null || _stats$2 === void 0 ? void 0 : _stats$2.totalSoldItems) || 0]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Total not sold items: \", ((_stats$3 = stats[0]) === null || _stats$3 === void 0 ? void 0 : _stats$3.totalNotSoldItems) || 0]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n_s(TransactionStatistics, \"iBGbusa6CoKNyIDQ5OQO4/oNoRY=\");\n_c = TransactionStatistics;\nexport default TransactionStatistics;\nvar _c;\n$RefreshReg$(_c, \"TransactionStatistics\");","map":{"version":3,"names":["React","useEffect","useState","Bar","jsxDEV","_jsxDEV","TransactionStatistics","selectedMonth","_s","_stats$","_stats$2","_stats$3","stats","setStats","chartData","setChartData","fetchStatistics","_data$","response","fetch","data","json","labels","datasets","label","totalSale","backgroundColor","borderColor","borderWidth","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","style","height","width","totalSoldItems","totalNotSoldItems","_c","$RefreshReg$"],"sources":["/home/prince/Desktop/roxiler/src/Components/TransactionStatistics.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Bar } from 'react-chartjs-2';\n\nconst TransactionStatistics = ({ selectedMonth }) => {\n    const [stats, setStats] = useState([]);\n    const [chartData, setChartData] = useState({});\n\n    useEffect(() => {\n        const fetchStatistics = async () => {\n            try {\n                const response = await fetch(`https://664c7d2a35bbda10988094cc.mockapi.io/task1/chart?month=${selectedMonth}`);\n                const data = await response.json();\n                setStats(data);\n\n                // Process data for chart\n                const chartData = {\n                    labels: ['Total Sale'],\n                    datasets: [\n                        {\n                            label: 'Total Sale',\n                            data: [data[0]?.totalSale || 0],\n                            backgroundColor: 'rgba(75, 192, 192, 0.2)',\n                            borderColor: 'rgba(75, 192, 192, 1)',\n                            borderWidth: 1,\n                        },\n                    ],\n                };\n                setChartData(chartData);\n            } catch (error) {\n                console.error('Error fetching statistics:', error);\n            }\n        };\n\n        fetchStatistics();\n    }, [selectedMonth]);\n\n    return (\n        <div>\n            <h3>Statistics - {selectedMonth}</h3>\n            <div style={{ height: '400px', width: '600px' }}>\n                <Bar data={chartData} />\n            </div>\n            <p>Total sale: {stats[0]?.totalSale || 0}</p>\n            <p>Total sold items: {stats[0]?.totalSoldItems || 0}</p>\n            <p>Total not sold items: {stats[0]?.totalNotSoldItems || 0}</p>\n        </div>\n    );\n};\n\nexport default TransactionStatistics;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}